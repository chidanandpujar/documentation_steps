ansible installation on python3.9 virtual environment 

mkdir ansible_debug
cd ansible_debug
python3.9 -m venv venv
source venv/bin/activate

To insall pyez
python -m pip install junos-eznc

To install older release 
python -m pip install junos-eznc==2.6.0

python -m pip install jxmlease
python -m pip install xmltodict
python -m pip install jsnapy==1.3.7 --no-binary :all:  --no-cache-dir

To install ansible stable release:
python -m pip install ansible
python -m pip install ansible-core==2.14

To install ansible developement release:
python -m pip install ansible-core==2.14.0rc1
python -m pip install https://github.com/ansible/ansible/archive/devel.tar.gz

Ansible persistent connection working release 
python -m pip install ansible-core==2.12.7
ansible==5.4.0
ansible-core==2.12.7


To install collection :
ansible-galaxy collection install juniper.device


To install the developement collection 
ansible-galaxy collection install git+https://github.com/Juniper/ansible-junos-stdlib.git#/ansible_collections/juniper/device

To clone the developement Collection for dev and debugging 
git clone https://github.com/Juniper/ansible-junos-stdlib.git

To install the v1.0.1 collection
ansible-galaxy collection install juniper.device:1.0.1

cd ansible-junos-stdlib

Dev installation for debugging
python setup.py install

To check the installed version
sudo ansible-galaxy collection list

find ./ -name ansible.cfg
./ansible-junos-stdlib/tests/ansible.cfg

cat ansible.cfg 
[defaults]
inventory = inventory
host_key_checking = False

[defaults]
hash_behaviour=merge
#roles_path = ~/.ansible/roles
inventory = inventory
host_key_checking = False
log_path = ./ansible.log
timeout=120



Update inventory file with following details .
which python3.9


vi ./ansible-junos-stdlib/tests/inventory
[junos]
test      ansible_host=xx.xx.xx.xx  ansible_user=xyz  ansible_pass=xyz ansible_ssh_pass=xyz ansible_port=22

[all:vars]
ansible_python_interpreter=/root/ansbile_debug/venv/bin/python3.9


create ansible playbook 

---
- name: 'Get config using collections'
  hosts: junos
  serial: 1
  connection: local
  gather_facts: no
  collections:
    - juniper.device

  tasks:
    - name: Retrieve the committed configuration
      config:
        retrieve: 'committed'
        format: 'set'
        dest_dir: "{{ playbook_dir }}/roles/junos_config/files/configs/set"
      register: response

    - name: Print the lines in the config.
      debug:
        var: response.config_lines





ansible-playbook get_config.yaml 

PLAY [Test juniper_junos_config module] ************************************************************************************************************************************************************

TASK [Retrieve the committed configuration] ********************************************************************************************************************************************************
ok: [test]

TASK [Check TEST 1] ********************************************************************************************************************************************************************************
ok: [test] => {
    "test1": {
        "changed": false,




TO remove:

ansible-galaxy remove juniper.junos


Ansible Roles:

---
- name: Test juniper_junos_config module
  hosts: all
  connection: local
  gather_facts: no
  roles:
    - juniper.junos
  tasks:
#################
    - name: Retrieve the committed configuration
      juniper_junos_config:
        retrieve: 'committed'
        diff: false
        check: false
        commit: false
      register: test1
      ignore_errors: True
      tags: [ test1 ]

    - name: Check TEST 1
      debug:
        var: test1


================================
Ansible Debug :
================================

export ANSIBLE_DEBUG=True
export ANSIBLE_KEEP_REMOTE_FILES=1


Ansible Module debugging:
------------------------

add raise exception:
raise ValueError("value: '%s'" % value)

export ANSIBLE_KEEP_REMOTE_FILES=1

ansible-playbook test_config_set_login_message.yml -vvvvv

cd /root/.ansible/tmp/ansible-tmp-1683099427.4391778-11868-152799521893049/AnsiballZ_config.py

python AnsiballZ_config.py explode

cd ./debug_dir

cat args

python AnsiballZ_config.py execute

python -m pdb AnsiballZ_config.py execute


debug collection paths:

[defaults]
hash_behaviour=merge
roles_path = ~/.ansible/roles
inventory = inventory
host_key_checking = False
log_path = ./ansible.log
collections_paths = /root/ansible_get_unresolved_route/ansible-junos-stdlib/ansible_collections


sphinx documentation:

https://docs.readthedocs.io/en/stable/intro/getting-started-with-sphinx.html
pip install sphinx
pip install sphinx_bootstrap_theme

		i) Within repo, cd docs
		ii) sphinx-build -b html . _build/html/




tables and views debugging :

from jnpr.junos import Device
from jnpr.junos.factory.factory_loader import FactoryLoader
import yamlordereddictloader
import yaml

yaml_data="""
---
ARPtable:
    command: show arp no-resolve
    platform: juniper_junos
    key:
      - mac
      - ip
    use_textfsm: True
    view: ARPview


ARPview:
    fields:
        mac: MAC
        ip: IP_ADDRESS
        interface: INTERFACE
        flag: FLAGS
"""

dev = Device(host='xx.xx.xx.xx', user='xyz', password='xyz', gather_facts=False)
dev.open()

globals().update(FactoryLoader().load(yaml.load(yaml_data,Loader=yamlordereddictloader.Loader)))
arps = ARPtable(dev)
arps.get()
for arp in arps:
        print ('mac_address: ', arp.mac)
        print ('ip_address: ', arp.ip)
        print ('interface_name:', arp.interface)
        print ('flag:', arp.flag)

dev.close()
fix:
supported versions
        pip install ntc_templates==1.4.1
        pip install textfsm==0.4.1

================================================================================================
known issues:
================================================================================================
Ansible:
fix1:
./venv/lib/python3.9/site-packages/ansible/executor/task_executor.py

        # deals with networking sub_plugins (network_cli/httpapi/netconf)
        sub = getattr(self._connection, '_sub_plugin', None)
        if sub and sub.get('type') != 'external':
            plugin_type = get_plugin_class(sub.get("obj"))
            varnames.extend(self._set_plugin_options(plugin_type, variables, templar, task_keys))
        sub_conn = getattr(self._connection, 'ssh_type_conn', None)
        if sub_conn is not None:
            varnames.extend(self._set_plugin_options("ssh_type_conn", variables, templar, task_keys))



To take the patch diff from pull requests
https://github.com/Juniper/ansible-junos-stdlib/pull/650.patch

